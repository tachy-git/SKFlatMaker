diff --git a/SKFlatMaker/interface/SKFlatMaker.h b/SKFlatMaker/interface/SKFlatMaker.h
index f16b63e..debdb5a 100644
--- a/SKFlatMaker/interface/SKFlatMaker.h
+++ b/SKFlatMaker/interface/SKFlatMaker.h
@@ -116,10 +116,12 @@
 #include "FWCore/Common/interface/TriggerNames.h" // -- Used to access the names and indices of the triggers corresponding to a particular TriggerResults object
 #include "FWCore/Common/interface/TriggerResultsByName.h" // --  Class which provides methods to access trigger results
 #include "DataFormats/Common/interface/TriggerResults.h" // -- The trigger path results are maintained here as a sequence of entries, one per trigger path
+/*
 #include "DataFormats/HLTReco/interface/TriggerEvent.h" // -- The single EDProduct to be saved for each event (AOD case) describing the (HLT) trigger table
 #include "DataFormats/HLTReco/interface/TriggerObject.h" // --  A single trigger object (e.g., an isolated muon, or MET) described by its 4-momentum and physics type
 #include "DataFormats/PatCandidates/interface/TriggerObjectStandAlone.h" // -- Analysis-level trigger object class (stand-alone). (within the 'pat' namespace.)
 #include "HLTrigger/HLTcore/interface/HLTConfigProvider.h" // -- This class provides access routines to get hold of the HLT Configuration
+*/
 
 
 ////////////////
@@ -213,7 +215,7 @@ class SKFlatMaker : public edm::EDAnalyzer
   std::string processName;
   std::string theElectronID;
   
-  HLTConfigProvider hltConfig_;
+  //HLTConfigProvider hltConfig_;
   
   // -- Tokens (for 76X) -- //
 
@@ -298,8 +300,8 @@ class SKFlatMaker : public edm::EDAnalyzer
   bool theStoreFatJetFlag;                // Yes or No to store FatJet
   bool theStoreMETFlag;                // Yes or No to store MET
   bool theStorePuppiMETFlag;                // Yes or No to store Puppi MET
-  bool theStoreHLTReportFlag;             // Yes or No to store HLT reuslts (list of triggers fired)
-  bool theStoreHLTObjectFlag;
+  //bool theStoreHLTReportFlag;             // Yes or No to store HLT reuslts (list of triggers fired)
+  //bool theStoreHLTObjectFlag;
   bool theStoreMuonFlag;
   bool theStoreTauFlag;
   bool theStoreElectronFlag;
@@ -322,7 +324,7 @@ class SKFlatMaker : public edm::EDAnalyzer
   
   edm::ESHandle<TransientTrackBuilder> theTTBuilder;
 
-  std::vector<std::string > HLTName_WildCard;
+  //std::vector<std::string > HLTName_WildCard;
   
   bool Flag_goodVertices;
   bool Flag_globalSuperTightHalo2016Filter;
@@ -377,7 +379,7 @@ class SKFlatMaker : public edm::EDAnalyzer
   float L1PrefireReweight_Down;
 
   //==== trigger object
-
+  /*
   vector<string> HLT_TriggerName;
   vector<string> HLT_TriggerFilterName;
   vector<float> HLTObject_pt;
@@ -385,6 +387,7 @@ class SKFlatMaker : public edm::EDAnalyzer
   vector<float> HLTObject_phi;
   vector<string> HLTObject_FiredFilters;
   vector<string> HLTObject_FiredPaths;
+  */
 
   //==== Jet
 
diff --git a/SKFlatMaker/python/SKFlatMaker_cfi.py b/SKFlatMaker/python/SKFlatMaker_cfi.py
index 728ba21..2287eb8 100644
--- a/SKFlatMaker/python/SKFlatMaker_cfi.py
+++ b/SKFlatMaker/python/SKFlatMaker_cfi.py
@@ -63,7 +63,7 @@ SKFlatMaker = cms.EDAnalyzer("SKFlatMaker",
   METFilterResults_RECO = cms.InputTag("TriggerResults", "", "RECO"),
      
   # -- Trigger -- #
-  TriggerResults = cms.untracked.InputTag("TriggerResults", "", "HLT"),
+  #TriggerResults = cms.untracked.InputTag("TriggerResults", "", "HLT"),
   TriggerResultsPAT = cms.untracked.InputTag("TriggerResults", "", "PAT"),
   ##TriggerObject = cms.untracked.InputTag("selectedPatTrigger"),
   TriggerObject = cms.untracked.InputTag("slimmedPatTrigger"),     
diff --git a/SKFlatMaker/src/SKFlatMaker.cc b/SKFlatMaker/src/SKFlatMaker.cc
index 86a6b8b..a5874a9 100644
--- a/SKFlatMaker/src/SKFlatMaker.cc
+++ b/SKFlatMaker/src/SKFlatMaker.cc
@@ -1332,8 +1332,9 @@ void SKFlatMaker::beginRun(const Run & iRun, const EventSetup & iSetup)
 
   bool changedConfig;
   if(!hltConfig_.init(iRun, iSetup, processName, changedConfig)){
-    LogError("HLTMuonVal") << "Initialization of HLTConfigProvider failed!!";
-    return;
+    //LogError("HLTMuonVal") << "Initialization of HLTConfigProvider failed!!";
+    //return;
+    cout << "Initialization of HLTConfigProvider failed, but keep the process..." << endl;
   }
 
   if(theDebugLevel) cout << "[SKFlatMaker::beginRun] finished" << endl;
@@ -2177,6 +2178,7 @@ void SKFlatMaker::fillMuons(const edm::Event &iEvent, const edm::EventSetup& iSe
     // -- HLT object matching -- //
     ULong64_t pathbits=0;
     ULong64_t filterbits=0;
+    /*
     for(pat::TriggerObjectStandAlone obj : *triggerObject){
       if(deltaR(obj,imuon)<0.3){
 	obj.unpackPathNames(trigNames);
@@ -2264,6 +2266,7 @@ void SKFlatMaker::fillMuons(const edm::Event &iEvent, const edm::EventSetup& iSe
 	if(obj.filter("hltTripleTrkMuFiltered5NoVtx")) filterbits|=ULong64_t(1)<<46;
       }
     }
+    */
     muon_pathbits.push_back(pathbits);
     muon_filterbits.push_back(filterbits);
   } // -- End of imuon iteration -- //
@@ -2275,7 +2278,7 @@ void SKFlatMaker::fillMuons(const edm::Event &iEvent, const edm::EventSetup& iSe
 //////////////////////////////
 void SKFlatMaker::fillElectrons(const edm::Event &iEvent, const edm::EventSetup& iSetup)
 {
-  
+  return;
   if(theDebugLevel) cout << "[SKFlatMaker::fillElectrons] called" << endl;
   // -- BeamSpot -- //
   edm::Handle<reco::BeamSpot> beamSpotHandle;
@@ -2882,7 +2885,7 @@ void SKFlatMaker::fillGENInfo(const edm::Event &iEvent)
 /////////////////////////
 void SKFlatMaker::fillPhotons(const edm::Event &iEvent)
 {
-  
+  return;
   edm::Handle< edm::View<pat::Photon> > PhotonHandle;
   iEvent.getByToken(PhotonToken, PhotonHandle);
   
